/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id 'java'
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Add kafka streams dependency library
    implementation 'org.apache.kafka:kafka-streams:4.0.0'

    // required for JSON serializer
    implementation 'com.google.code.gson:gson:2.10.1'

    // required for interactive queries (server)
    implementation 'io.javalin:javalin:6.7.0'
    implementation 'org.slf4j:slf4j-simple:2.0.17'

    // required for interactive queries (client)
    implementation 'com.squareup.okhttp3:okhttp:5.1.0'

    // required for Lombok Project
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'

    testCompileOnly 'org.projectlombok:lombok:1.18.38'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.38'

    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'kr.co.kwonshzzang.videogameleaderboard.App'
}

tasks.register("runFirst", JavaExec)  {
    mainClass = application.mainClass
    classpath sourceSets.main.runtimeClasspath
    systemProperties = [
        'host': 'localhost',
        'port': '9000',
        'stateDir': '/tmp/kafka-streams'
    ]
}

tasks.register("runSecond", JavaExec)  {
    mainClass = application.mainClass
    classpath sourceSets.main.runtimeClasspath
    systemProperties = [
            'host': 'localhost',
            'port': '9100',
            'stateDir': '/tmp/kafka-streams2'
    ]
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
