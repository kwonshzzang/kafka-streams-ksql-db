/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id 'java'
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // https://plugins.gradle.org/plugin/com.commercehub.gradle.plugin.avro
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.9.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url = uri("https://packages.confluent.io/maven/")
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

generateAvroJava {
    source("src/main/avro/")
    include("**/*.avsc")
    outputDir = file("build/generated/avro-java")
}

avro {
    fieldVisibility = "PRIVATE"
    outputCharacterEncoding = "UTF-8"
}

dependencies {
    // Add kafka streams dependency library
    implementation 'org.apache.kafka:kafka-streams:4.0.0'

    // required for JSON serializer
    implementation 'com.google.code.gson:gson:2.10.1'

    // required for schema-registry-compatible Avro Serdes
    implementation 'io.confluent:kafka-streams-avro-serde:8.0.0'

    // required for registryless Avro
    implementation 'org.apache.avro:avro:1.12.0'
    implementation 'com.mitchseymour:kafka-registryless-avro-serdes:1.0.0'

    // required for language translation
    implementation 'com.google.cloud:google-cloud-translate:2.66.0'
    implementation 'com.google.cloud:libraries-bom:26.62.0'

    // required for sentiment analysis
    implementation 'com.google.cloud:google-cloud-language:2.67.0'

    // required for Lombok Project
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'

    testCompileOnly 'org.projectlombok:lombok:1.18.38'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.38'



    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}



application {
    // Define the main class for the application.
    mainClass = 'kr.co.kwonshzzang.cryptosentiment.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
